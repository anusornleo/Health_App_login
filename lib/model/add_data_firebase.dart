import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:health_app/ui/ButtonGradient.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:progress_indicators/progress_indicators.dart';

List<String> fastfood = [
  'Angel Food Cake',
  'piece (28 g)',
  '72',
  'Apple Cake',
  'serving (100 g)',
  '252',
  'Apple Cobbler',
  'serving (100 g)',
  '198',
  'Apple Crisp',
  'serving (100 g)',
  '156',
  'Apple Crumble',
  'serving (100 g)',
  '156',
  'Apple Pie',
  'slice (125 g)',
  '296',
  'Apple Strudel',
  'piece (71 g)',
  '195',
  'Apple Turnover',
  'turnover (82 g)',
  '285',
  'Applesauce Cake',
  'piece (62 g)',
  '222',
  'Baked Alaska',
  'piece (103 g)',
  '254',
  'Bakewell Tart',
  'piece (59 g)',
  '254',
  'Banoffee Pie',
  'serving (100 g)',
  '395',
  'Birthday Cake',
  'piece (85 g)',
  '395',
  'Black and White Cookie',
  'cookie (113 g)',
  '431',
  'Black Forest Cake',
  'piece (107 g)',
  '282',
  'Blueberry Cobbler',
  'slice (100 g)',
  '234',
  'Blueberry Muffin',
  'muffin (57 g)',
  '215',
  'Blueberry Pie',
  'piece (125 g)',
  '290',
  'Bundt Cake',
  'slice (91 g)',
  '337',
  'Buttermilk Pie',
  'piece (144 g)',
  '547',
  'Caramel Cake',
  'slice (64 g)',
  '304',
  'Carrot Cake',
  'piece (133 g)',
  '543',
  'Cheesecake',
  'piece (80 g)',
  '257',
  'Cherry Pie',
  'piece (125 g)',
  '325',
  'Chess Pie',
  'piece (89 g)',
  '366',
  'Chocolate Cake',
  'piece (138 g)',
  '537',
  'Chocolate Cream Pie',
  'piece (99 g)',
  '301',
  'Chocolate Mousse Cake',
  'piece (95 g)',
  '247',
  'Chocolate Mousse Pie',
  'piece (95 g)',
  '247',
  'Chocolate Muffin',
  'muffin (100 g)',
  '420',
  'Coconut Cake',
  'piece (66 g)',
  '235',
  'Coffee Cake',
  'piece (90 g)',
  '298',
  'Cream Puff',
  'cream puff (130 g)',
  '434',
  'Crumb Cake',
  'piece (57 g)',
  '251',
  'Cupcake',
  'cupcake (43 g)',
  '131',
  'Danish Pastry',
  'pastry (71 g)',
  '266',
  'Donut',
  'donut (60 g)',
  '242',
  'Doughnut',
  'doughnut (60 g)',
  '242',
  'Flan',
  '1/2 cup (153 g)',
  '222',
  'Flourless Chocolate Cake',
  'piece (80 g)',
  '407',
  'French Cruller',
  'cruller (41 g)',
  '169',
  'Fruit Cake',
  'piece (43 g)',
  '139',
  'Funnel Cake',
  'cake (90 g)',
  '276',
  'German Chocolate Cake',
  'piece (110 g)',
  '407',
  'Gingerbread',
  'piece (74 g)',
  '263',
  'Ice Cream Cake',
  'piece (120 g)',
  '240',
  'Key Lime Pie',
  'piece (80 g)',
  '287',
  'King Cake',
  'piece (91 g)',
  '343',
  'Layer Cake',
  'slice (107 g)',
  '430',
  'Lemon Cake',
  'piece (66 g)',
  '232',
  'Lemon Meringue Pie',
  'piece (113 g)',
  '303',
  'Madeira Cake',
  'slice (50 g)',
  '197',
  'Marble Cake',
  'piece (109 g)',
  '370',
  'Meringue',
  'piece (127 g)',
  '362',
  'Opera Cake',
  'piece (25 g)',
  '80',
  'Paczki',
  'paczki (85 g)',
  '286',
  'Pancake',
  'pancake (38 g)',
  '86',
  'Panettone',
  'slice (50 g)',
  '180',
  'Pavlova',
  'serving (65 g)',
  '191',
  'Peach Cobbler',
  'tbsp (15 g)',
  '10',
  'Peach Pie',
  'piece (117 g)',
  '261',
  'Pecan Pie',
  'slice (133 g)',
  '541',
  'Pineapple Upside-Down Cake',
  'piece (115 g)',
  '367',
  'Plum Cake',
  'piece (150 g)',
  '164',
  'Poppy-Seed Cake',
  'piece (90 g)',
  '355',
  'Pound Cake',
  'serving (55 g)',
  '215',
  'Profiterole',
  'serving (113 g)',
  '377',
  'Puff Pastry',
  'sheet (245 g)',
  '1367',
  'Pumpkin Bread',
  'slice (60 g)',
  '179',
  'Pumpkin Cheesecake',
  'piece (100 g)',
  '340',
  'Pumpkin Pie',
  'slice (133 g)',
  '323',
  'Raspberry Pie',
  'piece (137 g)',
  '329',
  'Red Velvet Cake',
  'piece (80 g)',
  '294',
  'Rhubarb Pie',
  'piece (137 g)',
  '336',
  'Rum Cake',
  'piece (57 g)',
  '200',
  'Sacher Torte',
  'piece (125 g)',
  '440',
  'Sponge Cake',
  'piece (38 g)',
  '110',
  'Strawberry Cheesecake',
  'slice (61 g)',
  '199',
  'Strawberry Pie',
  'piece (167 g)',
  '384',
  'Strawberry Rhubarb Pie',
  'piece (150 g)',
  '422',
  'Sweet Potato Pie',
  'piece (131 g)',
  '341',
  'Swiss Roll',
  'cake (31 g)',
  '136',
  'Tarte Tatin',
  'piece (100 g)',
  '210',
  'Tiramisu',
  'serving (174 g)',
  '492',
  'Tiramisu Cake',
  'piece (108 g)',
  '314',
  'Treacle Tart',
  'serving (100 g)',
  '369',
  'Tres Leches Cake',
  'piece (120 g)',
  '295',
  'Trifle',
  'serving (100 g)',
  '180',
  'Victoria Sponge Cake',
  'piece (28 g)',
  '72',
  'Waffles',
  'waffle (33 g)',
  '103',
  'Wedding Cake',
  'piece (109 g)',
  '415'
];

String dataFood = 'cakes&pies_data';

class AddDataFirebaseScreen extends StatefulWidget {
  @override
  State<AddDataFirebaseScreen> createState() {
    return AddDataFirebaseScreenState();
  }
}

class AddDataFirebaseScreenState extends State<AddDataFirebaseScreen> {
  Map dataRegis = new Map();
  FirebaseAuth auth = FirebaseAuth.instance;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        body: Stack(
      children: <Widget>[
        Center(
          child: SingleChildScrollView(
            child: Container(
              child: Padding(
                padding:
                    EdgeInsets.only(top: 0, left: 18, right: 18, bottom: 0),
                child: Column(
                  children: <Widget>[
                    Text(dataFood, style: TextStyle(fontSize: 30)),
                    Text(
                      (fastfood.length / 3).toString(),
                      style: TextStyle(fontSize: 30),
                    ),
                    ButtonBar(
                      alignment: MainAxisAlignment.center,
                      children: <Widget>[
                        FlatGradientButton(
                            width: 120,
                            child: Text(
                              'Add Data',
                              style: TextStyle(
                                  color: Colors.white,
                                  fontWeight: FontWeight.bold),
                            ),
                            gradient: LinearGradient(
                              colors: <Color>[
                                Color(0xFF3366FF),
                                Color(0xFF00CCFF)
                              ],
                            ),
                            onPressed: () {
                              print(fastfood.length / 3);

                              for (int i = 0; i < fastfood.length; i += 3) {
                                Firestore.instance.runTransaction(
                                    (Transaction transaction) async {
                                  DocumentReference reference = Firestore
                                      .instance
                                      .collection(dataFood)
                                      .document();
                                  await reference.setData({
                                    "name": fastfood[i],
                                    "unit": fastfood[i + 1],
                                    "cal": fastfood[i + 2]
                                  });
                                });
                              }
                            }),
                      ],
                    )
                  ],
                ),
              ),
            ),
          ),
        ),
      ],
    ));
  }
}
